/* tslint:disable */
/* eslint-disable */
/**
 * OptProv API
 * This is the REST API to interact and control with libp2p hosts. All responses not in the HTTP status code range [200,300) return the error object below. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ErrorResponse,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    Retrieval,
    RetrievalFromJSON,
    RetrievalToJSON,
    RetrievalRequest,
    RetrievalRequestFromJSON,
    RetrievalRequestToJSON,
} from '../models';

export interface StartRetrievalRequest {
    hostId: string;
    retrievalRequest?: RetrievalRequest;
}

/**
 * 
 */
export class RetrievalsApi extends runtime.BaseAPI {

    /**
     * Instructs the given host to generate random content and announce its CID to the network.
     * Starts retrieving the given content ID.
     */
    async startRetrievalRaw(requestParameters: StartRetrievalRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Retrieval>> {
        if (requestParameters.hostId === null || requestParameters.hostId === undefined) {
            throw new runtime.RequiredError('hostId','Required parameter requestParameters.hostId was null or undefined when calling startRetrieval.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/hosts/{hostId}/retrievals`.replace(`{${"hostId"}}`, encodeURIComponent(String(requestParameters.hostId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RetrievalRequestToJSON(requestParameters.retrievalRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RetrievalFromJSON(jsonValue));
    }

    /**
     * Instructs the given host to generate random content and announce its CID to the network.
     * Starts retrieving the given content ID.
     */
    async startRetrieval(requestParameters: StartRetrievalRequest, initOverrides?: RequestInit): Promise<Retrieval> {
        const response = await this.startRetrievalRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

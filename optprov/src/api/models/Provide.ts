/* tslint:disable */
/* eslint-disable */
/**
 * OptProv API
 * This is the REST API to interact and control with libp2p hosts. All responses not in the HTTP status code range [200,300) return the error object below. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Provide
 */
export interface Provide {
    /**
     * 
     * @type {number}
     * @memberof Provide
     */
    provideId: number;
    /**
     * 
     * @type {string}
     * @memberof Provide
     */
    hostId: string;
    /**
     * 
     * @type {string}
     * @memberof Provide
     */
    contentId: string;
    /**
     * 
     * @type {number}
     * @memberof Provide
     */
    initialRoutingTableId: number;
    /**
     * 
     * @type {number}
     * @memberof Provide
     */
    finalRoutingTableId: number | null;
    /**
     * 
     * @type {string}
     * @memberof Provide
     */
    startedAt: string;
    /**
     * 
     * @type {string}
     * @memberof Provide
     */
    endedAt: string | null;
    /**
     * 
     * @type {string}
     * @memberof Provide
     */
    error: string | null;
}

export function ProvideFromJSON(json: any): Provide {
    return ProvideFromJSONTyped(json, false);
}

export function ProvideFromJSONTyped(json: any, ignoreDiscriminator: boolean): Provide {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'provideId': json['provideId'],
        'hostId': json['hostId'],
        'contentId': json['contentId'],
        'initialRoutingTableId': json['initialRoutingTableId'],
        'finalRoutingTableId': json['finalRoutingTableId'],
        'startedAt': json['startedAt'],
        'endedAt': json['endedAt'],
        'error': json['error'],
    };
}

export function ProvideToJSON(value?: Provide | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'provideId': value.provideId,
        'hostId': value.hostId,
        'contentId': value.contentId,
        'initialRoutingTableId': value.initialRoutingTableId,
        'finalRoutingTableId': value.finalRoutingTableId,
        'startedAt': value.startedAt,
        'endedAt': value.endedAt,
        'error': value.error,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * OptProv API
 * This is the REST API to interact and control with libp2p hosts. All responses not in the HTTP status code range [200,300) return the error object below. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    QueryPeerState,
    QueryPeerStateFromJSON,
    QueryPeerStateFromJSONTyped,
    QueryPeerStateToJSON,
} from './QueryPeerState';

/**
 * 
 * @export
 * @interface ProvidePeerInfo
 */
export interface ProvidePeerInfo {
    /**
     * 
     * @type {string}
     * @memberof ProvidePeerInfo
     */
    peerId: string;
    /**
     * 
     * @type {string}
     * @memberof ProvidePeerInfo
     */
    agentVersion: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProvidePeerInfo
     */
    protocols: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ProvidePeerInfo
     */
    distance: string;
    /**
     * 
     * @type {QueryPeerState}
     * @memberof ProvidePeerInfo
     */
    state: QueryPeerState;
    /**
     * 
     * @type {string}
     * @memberof ProvidePeerInfo
     */
    firstInteractedAt: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProvidePeerInfo
     */
    referredBy: string;
}

export function ProvidePeerInfoFromJSON(json: any): ProvidePeerInfo {
    return ProvidePeerInfoFromJSONTyped(json, false);
}

export function ProvidePeerInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProvidePeerInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'peerId': json['peerId'],
        'agentVersion': json['agentVersion'],
        'protocols': json['protocols'],
        'distance': json['distance'],
        'state': QueryPeerStateFromJSON(json['state']),
        'firstInteractedAt': json['firstInteractedAt'],
        'referredBy': json['referredBy'],
    };
}

export function ProvidePeerInfoToJSON(value?: ProvidePeerInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'peerId': value.peerId,
        'agentVersion': value.agentVersion,
        'protocols': value.protocols,
        'distance': value.distance,
        'state': QueryPeerStateToJSON(value.state),
        'firstInteractedAt': value.firstInteractedAt,
        'referredBy': value.referredBy,
    };
}

